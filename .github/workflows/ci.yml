name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: Install dependencies
        run: |
          # Try frozen-lockfile first, fallback to regular install if needed
          if ! pnpm install --frozen-lockfile; then
            echo "Lockfile is outdated, updating dependencies..."
            pnpm install
            echo "Warning: Lockfile was updated during CI run"
          fi

      - name: Run ESLint on example
        run: pnpm --filter example lint

      - name: Run TypeScript check
        run: pnpm --filter example type-check

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: Install dependencies
        run: |
          # Try frozen-lockfile first, fallback to regular install if needed
          if ! pnpm install --frozen-lockfile; then
            echo "Lockfile is outdated, updating dependencies..."
            pnpm install
            echo "Warning: Lockfile was updated during CI run"
          fi

      - name: Build
        run: pnpm build

      - name: Publish to npm
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
